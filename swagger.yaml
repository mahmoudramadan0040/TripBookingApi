openapi: 3.0.0
info:
  title: Trip Booking Api Documentation
  version: 1.0.0
  description: Trip Api Document

servers:
  - url: http://localhost:3000
paths:
  /api/auth/login:
    post:
      summary: Login user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: Successful login
        401:
          description: Unauthorized

  /api/auth/register:
    post:
      summary: Register a new user
      description: Register a user with email and password, sends verification code via email.
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  format: password
                  example: strongPassword123
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User registered. Check your email to verify your account.
        '400':
          description: Email already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Email already exists
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal Server Error

  /api/transport:
    post:
      summary: Create a new transportation record
      tags:
        - Transportation
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: 'Trip to Bali'
                price:
                  type: string
                  example: '500'
                Duration:
                  type: integer
                  example: 5
                Description:
                  type: string
                  example: 'A wonderful trip with many stops.'
                included:
                  type: array
                  items:
                    type: string
                  description: JSON stringified array of included items
                  example: ['Meals', 'Hotel']
                excluded:
                  type: array
                  items:
                    type: string
                  description: JSON stringified array of excluded items
                  example: ['Flights']
                highlight:
                  type: array
                  items:
                    type: string
                  description: JSON stringified array of highlights
                  example: ['Beach', 'Temple']
                cloudImages:
                  type: array
                  items:
                    type: string
                    format: binary
                localImages:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        '201':
          description: Transportation created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transportation'
        '500':
          description: Server error
    get:
      summary: Get all transportation records
      responses:
        '200':
          description: A list of transportations
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Transportation'
        '500':
          description: Server error

  /api/transport/{id}:
    get:
      summary: Get a transportation record by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Transportation found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transportation'
        '404':
          description: Transportation not found
        '500':
          description: Server error

    put:
      summary: Update a transportation record
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransportationInput'
      responses:
        '200':
          description: Updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transportation'
        '404':
          description: Not found
        '500':
          description: Server error

    delete:
      summary: Delete a transportation record
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Deleted successfully
        '404':
          description: Not found
        '500':
          description: Server error

components:
  schemas:
    Transportation:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        Duration:
          type: integer
        Description:
          type: string
        include:
          type: array
          items:
            type: string
        exclude:
          type: array
          items:
            type: string
        highlight:
          type: array
          items:
            type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    TransportationInput:
      type: object
      required:
        - title
      properties:
        title:
          type: string
        Duration:
          type: integer
        Description:
          type: string
        include:
          type: array
          items:
            type: string
        exclude:
          type: array
          items:
            type: string
        highlight:
          type: array
          items:
            type: string
